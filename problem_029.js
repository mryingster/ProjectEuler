#!/usr/bin/node

console.log("Project Euler - Problem 29:");
console.log("How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?\n");

// We need to store big numbers. The largest number that we will have to store is 100^100 which is 1 followed by 200 zeros

function array_compare(a, b){
    if (a.length != b.length)
        return false;

    for (var i=0; i<a.length; i++)
        if (a[i] != b[i])
            return false;

    return true;
}

function is_distinct(n, distinct_terms){
    // See if it exists in our distinct history by doing a compare to all previously distinct terms
    for (var d of distinct_terms){
        if (array_compare(d, n) == true) {
            return false;
            break;
        }
    }

    return true
}

const limit = 100;
var distinct = [];

for (var a=2 ; a<=limit ; a++){
    let n = [a];

    for (var b=2 ; b<=limit ; b++){
        // Multiply each element by a
        for (var i=0; i<n.length; i++)
            n[i] *= a;

        // Carry over as needed
        var i = 0;
        while (i < n.length){
            while (n[i] > 9){
                if (n.length == i+1)
                    n.push(0);
                n[i+1] += 1;
                n[i] -= 10;
            }
            i++;
        }

        // Debug print
        //console.log(a, b, n.join());

        // Save to our distinct history
        if (is_distinct(n, distinct) == true)
            distinct.push(n.slice());
    }
}

console.log(distinct.length);
