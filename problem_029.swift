#!/usr/bin/xcrun swift
// -*- compile-command: "swiftc problem_029.swift -o problem_029" -*-
// Copyright (c) 2016 Michael Caldwell
import Cocoa

print("Project Euler - Problem 29:")
print("How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?\n")

var history = [[Int]](repeating: [Int](repeating: 0, count: 200), count: 10000)
var index = 0
let debug = false

for a in 2...100 {
    var current = [Int](repeating: 0, count: 200)
    current[0] = a

    for b in 2...100 {
        // Carry over
        for i in 0...current.count-1 {
            while current[i] > 9 {
                current[i] -= 10
                current[i+1] += 1
            }
        }

        // Check if duplicate
        var duplicate = false
        for i in 0...index {
            var same = true
            for d in 0...current.count-1 {
                if history[i][d] != current[d] {
                    same = false
                    break
                }
            }
            if same == true {
                duplicate = true
                break
            }
        }

        // If not duplicate, add to history
        if duplicate == false {
            for d in 0...current.count-1 {
                history[index][d] = current[d]
            }
            if debug == true {
                print(a, " ^ ", b, " is unique!")
            }
            index += 1
        }

        // Multiply for next power
        for i in 0...current.count-1 {
            current[i] *= a
        }
    }
}

print(index + 1) // Add one because index is 0-based

